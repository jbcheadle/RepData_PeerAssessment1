install.packages("dplyr")
library(dplyr)
library(plyr)
x <- c(1,2,3,5,6,7,7,889,220)
stuff <- ifelse(x>4,TRUE,FALSE)
stuff
table(x,stuff)
table(stuff,x>4)
x[stuff]
?cut
library(Hmisc)
yesno <- sample(c("yes","no"),size=10, replace=TRUE)
yesnofac = factor(yesno,levels=c("yes","no"))
relevel(yesnofac,ref="yes")
as.numeric(yesnofac)
library(reshape2)
head(mtcars)
carMelt <- melt(mtcars,id.vars = c("carname","gear","cyl"), measure.vars = c("mpg","hp"))
mtcars$carname<-rownames(mtcars)
carMelt <- melt(mtcars,id.vars = c("carname","gear","cyl"), measure.vars = c("mpg","hp"))
head(carMelt)
tail(carMelt)
cylData <- dcast(carMelt, cyl ~ variable)
?dcast
cylData
cylData <- dcast(carMelt, cyl ~ variable,mean,std)
cylData <- dcast(carMelt, cyl ~ variable,mean,cos())
cylData <- dcast(carMelt, cyl ~ variable,mean,cos)
cylData <- dcast(carMelt, cyl ~ variable,mean)
cylData
?split
library(data.table)
?split
library("crayon", lib.loc="C:/Program Files/R/R-3.3.2/library")
detach("package:crayon", unload=TRUE)
?ddply
?summarize
chicago <- readRDS("chicago.rds")
swirl()
library(swirl)
swirl(0)
mydf <- read.csv(path2csv,stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
?tbl_df
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
print(cran)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version == "3.0.2", country == "IN")
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size>100500, r_os=="linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version)))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb/2^10)
mutate(cran3, correct_size = size-1000
)
mutate(cran3, correct_size = size+1000)
summarize(cran, avg_bytes = mean(size))
install.packages("curl")
swirl()
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran,package)
by_package
?summarize
summarize(by_package, mean(size))
?n
?n_distinct
source('C:/Users/jcheadle/AppData/Local/Temp/RtmpmuA415/summarize1.R')
submit()
pack_sum
quantile(pack_sum$count, probs=0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, count)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
arrange(top_unique, desc(unique()))
arrange(top_unique, desc(unique))
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_counts_sorted)
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
source('C:/Users/jcheadle/AppData/Local/Temp/RtmpmuA415/chain1.R')
chain1()
chain1
cran %>%
select(ip_id, country, package, size) %>%
print
source('C:/Users/jcheadle/AppData/Local/Temp/RtmpmuA415/chain1.R')
?
c
swirl()
cran %>%
select(ip_id, country, package, size) %>%
print
skip()
source('C:/Users/jcheadle/AppData/Local/Temp/RtmpmuA415/chain2.R')
skip()
source('C:/Users/jcheadle/AppData/Local/Temp/RtmpmuA415/chain3.R')
submit()
source('C:/Users/jcheadle/AppData/Local/Temp/RtmpmuA415/chain4.R')
submit()
library("dplyr", lib.loc="C:/Program Files/R/R-3.3.2/library")
library(swirl)
swirl(0)
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(student2, sex_class, count, -grade)
res <- gather(students2, sex_class, count, -grade)
res
separate(0)
separate()
?separate
separate(res, sex_class, into = c("sex","class"))
source('C:/Users/jcheadle/AppData/Local/Temp/RtmpIJz8pa/script1.R')
submit()
students3
?gather
source('C:/Users/jcheadle/AppData/Local/Temp/RtmpIJz8pa/script2.R')
refresh()
reset()
source('C:/Users/jcheadle/AppData/Local/Temp/RtmpIJz8pa/script2.R')
students3$class1:class6
students3$class1:class5
students3$class1
source('C:/Users/jcheadle/AppData/Local/Temp/RtmpIJz8pa/script2.R')
reset()
source('C:/Users/jcheadle/AppData/Local/Temp/RtmpIJz8pa/script2.R')
select(students3,class1:class5)
students3%>%select(class1:class5)
students3%>%select(class1:class5)%>%gather(class,grade,na.rm=TRUE)
source('C:/Users/jcheadle/AppData/Local/Temp/RtmpIJz8pa/script2.R')
submit()
skip()
swirl()
submit()
source('C:/Users/jcheadle/AppData/Local/Temp/RtmpIJz8pa/script2.R')
source('C:/Users/jcheadle/AppData/Local/Temp/RtmpIJz8pa/script2.R')
source('C:/Users/jcheadle/AppData/Local/Temp/RtmpIJz8pa/script2.R')
?gather
?filter
source('C:/Users/jcheadle/AppData/Local/Temp/RtmpIJz8pa/script2.R')
skip()
?spread(0)
?spread
source('C:/Users/jcheadle/AppData/Local/Temp/RtmpIJz8pa/script3.R')
source('C:/Users/jcheadle/AppData/Local/Temp/RtmpIJz8pa/script3.R')
source('C:/Users/jcheadle/AppData/Local/Temp/RtmpIJz8pa/script3.R')
submit()
source('C:/Users/jcheadle/AppData/Local/Temp/RtmpIJz8pa/script3.R')
submit()
library(readr)
parse_number("class5")
?mutate
source('C:/Users/jcheadle/AppData/Local/Temp/RtmpIJz8pa/script4.R')
source('C:/Users/jcheadle/AppData/Local/Temp/RtmpIJz8pa/script4.R')
source('C:/Users/jcheadle/AppData/Local/Temp/RtmpIJz8pa/script4.R')
submit()
students4
source('C:/Users/jcheadle/AppData/Local/Temp/RtmpIJz8pa/script5.R')
submit()
source('C:/Users/jcheadle/AppData/Local/Temp/RtmpIJz8pa/script6.R')
submit()
source('C:/Users/jcheadle/AppData/Local/Temp/RtmpIJz8pa/script7.R')
submit()
source('C:/Users/jcheadle/AppData/Local/Temp/RtmpIJz8pa/script7.R')
submit()
passed
failed
passed <- mutate(passed, status="passed")
failed <- mutate(passed, status="failed")
failed <- mutate(failed, status="failed")
bind_rows(passed,failed)
sat
source('C:/Users/jcheadle/AppData/Local/Temp/RtmpIJz8pa/script8.R')
submit(0)
submit()
?group_by
source('C:/Users/jcheadle/AppData/Local/Temp/RtmpIJz8pa/script9.R')
submit()
?heatmap.2
?heatmap
library(edgeR)
library(limma)
library(Glimma)
library(gplots)
library(RColorBrewer)
?heatmap.2
setwd("C:/Program Files/R/Coursera/Data Science R/RepData_PeerAssessment1")
x <- read.csv("./activity.csv")
head(x)
x <- read.csv("./activity.csv", na.rm=TRUE)
?read.csv
x <- read.csv("./activity.csv")
class(x)
class(x$steps)
class(x$date)
class(x$interval)
unique(x$interval)
unique(x$day)
unique(x$date)
hist(x$steps)
?hist
hist(x$steps, breaks=x$date)
?table
table(x)
aggregate(x$steps, by=list(Date=x$date), FUN=sum())
aggregate(x$steps, by=list(Date=x$date), FUN=sum
)
aggregate(x$steps, by=list(Date=x$date), FUN=sum, na.rm=TRUE)
agg <- aggregate(x$steps, by=list(Date=x$date), FUN=sum, na.rm=TRUE)
hist(agg)
hist(agg$x)
hist(agg$Date)
class(agg$Date)
?hist
library(ggplot2)
?qplot
qplot(x,data=agg,fill=Date)
mean(agg$x)
median(agg$x)
hist(agg$x)
hist(agg$x,xlab="Total Steps Taken per Day",title="Histogram of Total Steps Taken per Day")
?hist
hist(agg$x,xlab="Total Steps Taken per Day",main="Histogram of Total Steps Taken per Day")
?plot
plot(agg$Date, agg$x, type="l")
plot(x$interval, x$steps, type="l")
unique(x$interval)
agg2 <- aggregate(x$steps,by=list(Interval = x$interval), fun=mean)
agg2 <- aggregate(x$steps,by=list(Interval = x$interval), fun=mean, na.rm=TRUE)
agg2 <- aggregate(x$steps,by=list(Interval = x$interval), FUN=mean, na.rm=TRUE)
agg2
plot(agg2$Interval, agg2$x, type="l")
plot(agg2$Interval, agg2$x, type="l", ylab="Average Step Number", xlab="Interval",main="Average Step Number by 5-minute Interval")
class(agg2)
max(agg2)
max(agg2$x)
agg2[agg2$x == max(agg2$x),]
agg2[agg2$x == max(agg2$x),][1]
agg2[agg2$x == max(agg2$x),][1,1]
g <- x[is.na(x$steps),]
g
sum(is.na(x$steps))
install.packages("impute")
library(impute)
install.packages("imputation")
require(impute)
require(imputation)
install.packages("kNN")
library(Hmisc)
y <- Hmisc::impute(x)
?impute
y <- impute(x$steps)
y
is.imputed(y)
x_i <- cbind(y, x$date, x$interval)
head(x_i)
x_i <- as.data.frame(cbind(y, x$date, x$interval))
head(x_i)
names(x_i) <- names(x)
head(x_i)
hist(x_i)
hix(x_i$steps)
hist(x_i$steps)
agg3 <- aggregate(x$steps, by=list(Date=x$date), FUN=sum, na.rm=TRUE)
hist(agg3$x,xlab="Total Steps Taken per Day",main="Histogram of Total Steps Taken per Day (Imputed)")
hist(agg3$x,xlab="Total Steps Taken per Day",main="Histogram of Total Steps Taken per Day\n(Imputed)")
mean_steps_byday_i <- mean(agg3$x)
median_steps_byday_i <- median(agg3$x)
mean_steps_byday
mean_steps_byday <- mean(agg$x)
median_steps_byday <- median(agg$x)
mean_steps_byday
mean_steps_byday_i
z <- impute(x$steps, mean)
head(z)
z <- impute(x$steps, median)
z
head(z)
z <- impute(x$steps, mean)
y <- impute(x$steps,mean)
x_i <- as.data.frame(cbind(y, x$date, x$interval))
names(x_i) <- names(x)
agg3 <- aggregate(x$steps, by=list(Date=x$date), FUN=sum, na.rm=TRUE)
hist(agg3$x,xlab="Total Steps Taken per Day",main="Histogram of Total Steps Taken per Day\n(Imputed)")
mean_steps_byday_i <- mean(agg3$x)
median_steps_byday_i <- median(agg3$x)
y <- impute(x$steps,median())
x_i <- as.data.frame(cbind(y, x$date, x$interval))
names(x_i) <- names(x)
agg3 <- aggregate(x_i$steps, by=list(Date=x_i$date), FUN=sum)
hist(agg3$x,xlab="Total Steps Taken per Day",main="Histogram of Total Steps Taken per Day\n(Imputed)")
mean_steps_byday_i <- mean(agg3$x)
median_steps_byday_i <- median(agg3$x)
mean_steps_byday
mean_steps_byday_i
median_steps_byday
median_steps_byday_i
?int
agg3$x <- as.integer(agg3$x)
hist(agg3$x,xlab="Total Steps Taken per Day",main="Histogram of Total Steps Taken per Day\n(Imputed)")
mean_steps_byday_i <- mean(agg3$x)
median_steps_byday_i <- median(agg3$x)
median_steps_byday_i
